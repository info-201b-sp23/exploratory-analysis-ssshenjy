doses_used_percent <- sum(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent/100),
"\nThe percentage of doses used is:", percent(doses_used_percent/100))
# Print the summary paragraph
cat(summary_paragraph)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- sum(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- sum(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- sum(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent/100),
"\nThe percentage of doses used is:", percent(doses_used_percent/100))
# Print the summary paragraph
cat(summary_paragraph)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- sum(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- sum(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- sum(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent/100),
"\nThe percentage of doses used is:", percent(doses_used_percent/100))
# Print the summary paragraph
cat(summary_paragraph)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- sum(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- sum(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- sum(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent/100),
"\nThe percentage of doses used is:", percent(doses_used_percent/100))
# Print the summary paragraph
cat(summary_paragraph)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- sum(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- sum(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- sum(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", people_vaccinated_percent, "%",
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", people_fully_vaccinated_percent, "%",
"\nThe percentage of doses used is:", doses_used_percent, "%")
# Print the summary paragraph
cat(summary_paragraph)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- mean(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- mean(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent/100),
"\nThe percentage of doses used is:", percent(doses_used_percent/100))
# Print the summary paragraph
cat(summary_paragraph)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- mean(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- mean(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent/100),
"\nThe percentage of doses used is:", percent(doses_used_percent/100))
# Print the summary paragraph
cat(summary_paragraph)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- mean(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- mean(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent),
"\nThe percentage of doses used is:", percent(doses_used_percent))
# Print the summary paragraph
cat(summary_paragraph)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- mean(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- mean(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent),
"\nThe percentage of doses used is:", percent(doses_used_percent))
# Print the summary paragraph
cat(summary_paragraph)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- mean(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- mean(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent/100),
"\nThe percentage of doses used is:", percent(doses_used_percent/100))
# Print the summary paragraph
cat(summary_paragraph)
# Read the dataset
state_vacc <- read.delim("us_state_vaccinations.csv", stringsAsFactors = FALSE)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.delim("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- mean(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- mean(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent/100),
"\nThe percentage of doses used is:", percent(doses_used_percent/100))
# Print the summary paragraph
cat(summary_paragraph)
csv
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate the total vaccinations
total_vaccinations <- sum(state_vacc$total_vaccinations, na.rm = TRUE)
# Calculate the total distributed doses
total_distributed <- sum(state_vacc$total_distributed, na.rm = TRUE)
# Calculate the percentage of people vaccinated
people_vaccinated_percent <- mean(state_vacc$people_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of people fully vaccinated per hundred
people_fully_vaccinated_percent <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
# Calculate the percentage of doses used
doses_used_percent <- mean(state_vacc$share_doses_used, na.rm = TRUE)
# Generate the summary paragraph
summary_paragraph <- paste("The total number of vaccinations administered across all states is:", comma(total_vaccinations),
"\nThe total number of vaccine doses distributed to the states is:", comma(total_distributed),
"\nThe percentage of people who have received at least one vaccine dose is:", percent(people_vaccinated_percent/100),
"\nThe percentage of people who are fully vaccinated per hundred individuals is:", percent(people_fully_vaccinated_percent/100),
"\nThe percentage of doses used is:", percent(doses_used_percent/100))
# Print the summary paragraph
cat(summary_paragraph)
# Read the dataset
data <- read.csv("us_state_vaccinations.csv")
library(readr)
# Read the dataset
data <- read.csv("us_state_vaccinations.csv")
# Calculate summary statistics
total_vaccinations_mean <- mean(data$total_vaccinations)
people_fully_vaccinated_mean <- mean(data$people_fully_vaccinated_per_hundred)
total_vaccinations_per_hundred_max <- max(data$total_vaccinations_per_hundred)
daily_vaccinations_max <- max(data$daily_vaccinations)
share_doses_used_mean <- mean(data$share_doses_used)
# Generate summary information
summary_info <- paste("The average total vaccinations administered across all states is", round(total_vaccinations_mean), "doses. On average,", round(people_fully_vaccinated_mean, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(total_vaccinations_per_hundred_max, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", daily_vaccinations_max, "doses. On average,", round(share_doses_used_mean, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_info)
library(readr)
# Read the dataset
data <- read.csv("us_state_vaccinations.csv")
# Calculate summary statistics
total_vaccinations_mean <- mean(data$total_vaccinations)
people_fully_vaccinated_mean <- mean(data$people_fully_vaccinated_per_hundred)
total_vaccinations_per_hundred_max <- max(data$total_vaccinations_per_hundred)
daily_vaccinations_max <- max(data$daily_vaccinations)
share_doses_used_mean <- mean(data$share_doses_used)
# Generate summary information
summary_info <- paste("The average total vaccinations administered across all states is", round(total_vaccinations_mean), "doses. On average,", round(people_fully_vaccinated_mean, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(total_vaccinations_per_hundred_max, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", daily_vaccinations_max, "doses. On average,", round(share_doses_used_mean, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_info)
# Read the dataset
data <- read.delim("us_state_vaccinations.csv")
library(readr)
# Read the dataset
data <- read.delim("us_state_vaccinations.csv")
# Calculate summary statistics
total_vaccinations_mean <- mean(data$total_vaccinations)
people_fully_vaccinated_mean <- mean(data$people_fully_vaccinated_per_hundred)
total_vaccinations_per_hundred_max <- max(data$total_vaccinations_per_hundred)
daily_vaccinations_max <- max(data$daily_vaccinations)
share_doses_used_mean <- mean(data$share_doses_used)
# Generate summary information
summary_info <- paste("The average total vaccinations administered across all states is", round(total_vaccinations_mean), "doses. On average,", round(people_fully_vaccinated_mean, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(total_vaccinations_per_hundred_max, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", daily_vaccinations_max, "doses. On average,", round(share_doses_used_mean, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_info)
library(readr)
# Read the dataset
data <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate summary statistics
total_vaccinations_mean <- mean(data$total_vaccinations)
people_fully_vaccinated_mean <- mean(data$people_fully_vaccinated_per_hundred)
total_vaccinations_per_hundred_max <- max(data$total_vaccinations_per_hundred)
daily_vaccinations_max <- max(data$daily_vaccinations)
share_doses_used_mean <- mean(data$share_doses_used)
# Generate summary information
summary_info <- paste("The average total vaccinations administered across all states is", round(total_vaccinations_mean), "doses. On average,", round(people_fully_vaccinated_mean, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(total_vaccinations_per_hundred_max, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", daily_vaccinations_max, "doses. On average,", round(share_doses_used_mean, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_info)
library(readr)
# Read the dataset
data <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate summary statistics
total_vaccinations_mean <- mean(data$total_vaccinations)
people_fully_vaccinated_mean <- mean(data$people_fully_vaccinated_per_hundred)
total_vaccinations_per_hundred_max <- max(data$total_vaccinations_per_hundred)
daily_vaccinations_max <- max(data$daily_vaccinations)
share_doses_used_mean <- mean(data$share_doses_used)
# Generate summary information
summary_info <- paste("The average total vaccinations administered across all states is", round(total_vaccinations_mean), "doses. On average,", round(people_fully_vaccinated_mean, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(total_vaccinations_per_hundred_max, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", daily_vaccinations_max, "doses. On average,", round(share_doses_used_mean, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_info)
# Read the dataset
data <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate summary statistics
total_vaccinations_mean <- mean(data$total_vaccinations, na.rm = TRUE)
people_fully_vaccinated_mean <- mean(data$people_fully_vaccinated_per_hundred, na.rm = TRUE)
total_vaccinations_per_hundred_max <- max(data$total_vaccinations_per_hundred, na.rm = TRUE)
daily_vaccinations_max <- max(data$daily_vaccinations, na.rm = TRUE)
share_doses_used_mean <- mean(data$share_doses_used, na.rm = TRUE)
# Generate summary information
summary_info <- paste("The average total vaccinations administered across all states is", round(total_vaccinations_mean), "doses. On average,", round(people_fully_vaccinated_mean, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(total_vaccinations_per_hundred_max, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", daily_vaccinations_max, "doses. On average,", round(share_doses_used_mean, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_info)
library(ggplot2)
library(dplyr)
library(scales)
library(tidyverse)
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate summary statistics
total_vaccinations_mean <- mean(state_vacc$total_vaccinations, na.rm = TRUE)
people_fully_vaccinated_mean <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
total_vaccinations_per_hundred_max <- max(state_vacc$total_vaccinations_per_hundred, na.rm = TRUE)
daily_vaccinations_max <- max(state_vacc$daily_vaccinations, na.rm = TRUE)
share_doses_used_mean <- mean(state_vacc$share_doses_used, na.rm = TRUE)
# Generate summary information
summary_info <- paste("The average total vaccinations administered across all states is", round(total_vaccinations_mean), "doses. On average,", round(people_fully_vaccinated_mean, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(total_vaccinations_per_hundred_max, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", daily_vaccinations_max, "doses. On average,", round(share_doses_used_mean, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_info)
library(ggplot2)
library(dplyr)
library(scales)
library(tidyverse)
state_vacc <- read.csv("us_state_vaccinations.csv", stringsAsFactors = FALSE)
# Calculate summary statistics
total_vaccinations_mean <- mean(state_vacc$total_vaccinations, na.rm = TRUE)
people_fully_vaccinated_mean <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
total_vaccinations_per_hundred_max <- max(state_vacc$total_vaccinations_per_hundred, na.rm = TRUE)
daily_vaccinations_max <- max(state_vacc$daily_vaccinations, na.rm = TRUE)
share_doses_used_mean <- mean(data$share_doses_used, na.rm = TRUE) * 100
# Generate summary information
summary_info <- paste("The average total vaccinations administered across all states is", round(total_vaccinations_mean), "doses. On average,", round(people_fully_vaccinated_mean, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(total_vaccinations_per_hundred_max, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", daily_vaccinations_max, "doses. On average,", round(share_doses_used_mean, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_info)
library(ggplot2)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read_csv("https://data.world/ourworldindata/covid-19-vaccinations/file/us_state_vaccinations.csv")
library(ggplot2)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read_csv("us_state_vaccinations.csv")
# Calculate summary statistics
total_vaccinations_mean <- mean(state_vacc$total_vaccinations, na.rm = TRUE)
people_fully_vaccinated_mean <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
total_vaccinations_per_hundred_max <- max(state_vacc$total_vaccinations_per_hundred, na.rm = TRUE)
daily_vaccinations_max <- max(state_vacc$daily_vaccinations, na.rm = TRUE)
share_doses_used_mean <- mean(state_vacc$share_doses_used, na.rm = TRUE) * 100
# Generate summary information
summary_info <- paste("The average total vaccinations administered across all states is", round(total_vaccinations_mean), "doses. On average,", round(people_fully_vaccinated_mean, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(total_vaccinations_per_hundred_max, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", daily_vaccinations_max, "doses. On average,", round(share_doses_used_mean, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_info)
library(ggplot2)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read_csv("us_state_vaccinations.csv")
# Calculate summary statistics
mean_total_vaccinations <- mean(state_vacc$total_vaccinations, na.rm = TRUE)
mean_people_fully_vaccinated <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
max_total_vaccinations_per_hundred <- max(state_vacc$total_vaccinations_per_hundred, na.rm = TRUE)
max_daily_vaccinations <- max(state_vacc$daily_vaccinations, na.rm = TRUE)
mean_share_doses_used <- mean(state_vacc$share_doses_used, na.rm = TRUE) * 100
# Generate summary information
summary_information <- paste("The average total vaccinations administered across all states is", round(mean_total_vaccinations), "doses. On average,", round(mean_people_fully_vaccinated, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(max_total_vaccinations_per_hundred, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", max_daily_vaccinations, "doses. On average,", round(mean_share_doses_used, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_information)
library(ggplot2)
library(dplyr)
library(scales)
library(tidyverse)
# Read the dataset
state_vacc <- read_csv("us_state_vaccinations.csv")
# Calculate summary statistics
mean_total_vaccinations <- mean(state_vacc$total_vaccinations, na.rm = TRUE)
mean_people_fully_vaccinated <- mean(state_vacc$people_fully_vaccinated_per_hundred, na.rm = TRUE)
max_total_vaccinations_per_hundred <- max(state_vacc$total_vaccinations_per_hundred, na.rm = TRUE)
max_daily_vaccinations <- max(state_vacc$daily_vaccinations, na.rm = TRUE)
mean_share_doses_used <- mean(state_vacc$share_doses_used, na.rm = TRUE) * 100
# Generate summary information
summary_information <- paste("The average total vaccinations administered across all states is", round(mean_total_vaccinations), "doses. On average,", round(mean_people_fully_vaccinated, 2), "percent of the population is fully vaccinated per hundred people. The highest total vaccinations per hundred people is", round(max_total_vaccinations_per_hundred, 2), "in any state. The maximum number of daily vaccinations administered in a single day is", max_daily_vaccinations, "doses. On average,", round(mean_share_doses_used, 2), "percent of the distributed vaccine doses have been used.")
# Print the summary paragraph
cat(summary_information)
---
title: "Exploratory Analysis"
---
title: "Exploratory Analysis"
---
title: "Exploratory Analysis"
---
title: "Exploratory Analysis"
---
title: "Exploratory Analysis"
```{r, echo = FALSE, message = FALSE, warning = FALSE, code = source("Summaryinformationscript.R")}
```{r, echo = FALSE, message = FALSE, warning = FALSE, code = source("Summaryinformationscript.R")}
Write a summary paragraph of findings that includes the 5 values calculated from your summary information R script
```{r, echo = FALSE, message = FALSE, warning = FALSE, code = readLines("Summaryinformationscript.R")}
```{r, echo = FALSE, message = TRUE, warning = FALSE, code = readLines("Summaryinformationscript.R")}
pwd()
Write a summary paragraph of findings that includes the 5 values calculated from your summary information R script
getwd()
# Print the summary paragraph
cat(summary_information)
```{r, include=FALSE}
```{r, include=FALSE}
```{r, include=FALSE}
```{r, include=FALSE}
```{r, include=FALSE}
```{r, include=FALSE}
source("Summaryinformationscript.R")
---
title: "Exploratory Analysis"
summary <- summary_information
print(summary)
source("Summaryinformationscript.R")
summary <- summary_information
print(summary)
source("Summaryinformationscript.R")
summary <- summary_information
cat(summary)
{r, include=FALSE, show_col_types = FALSE}
cat(summary)
source("Summaryinformationscript.R")
summary <- summary_information
cat(summary)
{r, include=FALSE, show_col_types = FALSE`}
source("Summaryinformationscript.R")
summary <- summary_information
cat(summary)
source("Summaryinformationscript.R")
plot("Summaryinformationscript.R")
cat("Summaryinformationscript.R")
cat(summary_information)
cat(summary_information)
cat(summary_information)
cat(summary_information)
cat(summary_information)
cat(summary_information)
cat(summary_information)
cat(summary_information)
### Table
cat(summary_information)
cat(summary_information)
cat(summary_information)
cat(summary_information)
cat(summary_information)
options(warning = FALSE)
cat(summary_information)
cat(summary_information)
cat(summary_information)
### Implications
If we answered the research questions, there are several possible
cat(summary_information)
cat(summary_information)
cat(summary_information)
cat(summary_information)
### Table
```{r, echo = FALSE, message = FALSE, warning = FALSE, results = "asis", code = readLines("table.R")}
knitr::kable(aggregate_data, format = "html")
knitr::kable(aggregate_data, format = "html")
This table offers an comprehensive review of relevant aggregated data of the U.S. as a whole regarding the COVID-19 vaccination status and statistics for its latest day of record. Information included in the table are average total doses administered which indicates the overall volume of vaccinations, average number of people fully vaccinated which provides an insight of the progress of vaccination coverage for full immunization, and average shared doses used which examinates the efficiency of vaccine distribution and utilization. This table provides a snapshot of the average statistics, grouping by all states of the United States on the latest available date, to monitor the progress of vaccination efforts and evaluate the effectiveness of vaccination campaigns.
### Chart 1
```{r, echo = FALSE, message = FALSE, warning = FALSE, code = readLines("Nick's Chart.R")}
<<<<<<< HEAD
cat(summary_information)
